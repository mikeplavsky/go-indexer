user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {

    server {

        listen 443 ssl;
        server_name $AWS_STACK_NAME.sa4sp.com;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

	auth_basic "Restricted";
	auth_basic_user_file /etc/nginx/.htpasswd;

        location / {
            root /data/www;
        }

	location /es/ {
            proxy_pass http://localhost:8080/;
        }
        
	location /api/ {
            proxy_pass http://localhost:3000/;
            proxy_read_timeout  3600;
        }

	location /kibana/ {
            proxy_pass http://localhost:5601/;
        }

    }	

    server {

        listen 443 ssl;
        server_name fit.$AWS_STACK_NAME.sa4sp.com;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

	auth_basic "Restricted";
	auth_basic_user_file /etc/nginx/.htpasswd;

	location / {
            proxy_pass http://localhost:3680/;
            proxy_buffering off;
        }
        
    }	

    server {

        listen 443 ssl;
        server_name notebook.$AWS_STACK_NAME.sa4sp.com;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;

        location / {

            proxy_pass http://localhost:8888/;
            proxy_read_timeout  3600;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header Origin htts://$host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_buffering off;

        }
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}
