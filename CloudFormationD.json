{
  "Description": "On Demand Stack for LogManagement project",
  "Parameters": {
    "InstanceType": {
      "Description": "Elasticsearch EC2 instance type",
      "Type": "String",
      "Default": "r3.2xlarge",
      "AllowedValues": [
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "KeyPair": {
      "Description": "EC2 Key Pair for starting instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "ESKeyPair"
    }
  },
  "Resources": {
    "Indexer": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZones": [
          "us-east-1c"
        ],
        "KeyName": {
          "Ref": "KeyPair"
        },
        "ImageId": "ami-2e536746",
        "SecurityGroups": [
          "sg-f8ebb992"
        ],
        "IamInstanceProfile": "arn:aws:iam::128732327734:instance-profile/DMP_Infrastructure",
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/sh\n",
                "/opt/aws/bin/cfn-init -v -c provision -s ",
                {
                  "Ref": "AWS::StackName"
                },
                "  -r LaunchConfig ",
                "  --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "aws s3 cp s3://logmanagement/go-indexer.zip /tmp/\n",
                "unzip /tmp/go-indexer.zip -d /etc/go-indexer/\n",
                "cd /etc/go-indexer/\n",
                "./prep_indexer.sh\n",
                "./run_stack.sh\n"
              ]
            ]
          }
        },
        "NotificationConfiguration": {
          "TopicARN": "arn:aws:sns:us-east-1:128732327734:maxim",
          "NotificationTypes": [
            "autoscaling:EC2_INSTANCE_LAUNCH",
            "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
            "autoscaling:EC2_INSTANCE_TERMINATE",
            "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
          ]
        },
        "Tags": [
          {
            "Key": "team",
            "Value": "logman",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            },
            "PropagateAtLaunch": "true"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "provision": [
              "register-hostname"
            ]
          },
          "register-hostname": {
            "files": {
              "/tmp/route53.json": {
                "content": {
                  "Changes": [
                    {
                      "Action": "UPSERT",
                      "ResourceRecordSet": {
                        "Name": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Ref": "AWS::StackName"
                              },
                              ".sa4sp.com."
                            ]
                          ]
                        },
                        "Type": "A",
                        "TTL": 60,
                        "ResourceRecords": [
                          {
                            "Value": "$PUBLIC_IP"
                          }
                        ]
                      }
                    }
                  ]
                },
                "mode": "000755",
                "owner": "root",
                "group": "root"
              }
            },
            "commands": {
              "0001_subs-template": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4) && sed -i \"s/\\$PUBLIC_IP/$PUBLIC_IP/g\" /tmp/route53.json && sed -i \"s/\\\"60\\\"/60/g\" /tmp/route53.json"
                    ]
                  ]
                }
              },
              "0002_submit-zone-update-request": {
                "ignoreErrors": true,
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "aws route53 change-resource-record-sets",
                      " --hosted-zone-id Z2XLKK5Y4BC9Z1",
                      " --change-batch file:///tmp/route53.json --region us-east-1"
                    ]
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "KibanaURL": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "AWS::StackName"
            },
            ".sa4sp.com/kibana"
          ]
        ]
      }
    },
    "DashboardURL": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "AWS::StackName"
            },
            ".sa4sp.com/"
          ]
        ]
      }
    },
    "SSH": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "ssh ec2-user@",
            {
              "Ref": "AWS::StackName"
            },
            ".sa4sp.com -v -i ~/ESKeyPair.pem"
          ]
        ]
      }
    },
    "Instance": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#Instances:instanceTypeFilter=all-instance-types;instanceState=running;tag:aws:cloudformation:stack-id=",
            {
              "Ref": "AWS::StackName"
            }
          ]
        ]
      },
      "Description": "May be empty if AutoScalingGroup has not yet created instance"
    }
  }
}
